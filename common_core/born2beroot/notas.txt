COMANDOS
para entrar na raiz --> su
instalar pacotes --> apt install sudo
reiniciar a maquina --> sudo reboot
na root, mostrar a versão do sudo --> sudo -V, sudo -V > file.txt
criar um utilizador --> sudo adduser nome
criar um gruo --> sudo addgroup user42
verificar o grupo --> getent group nome_grupo
SSH
atualizar os repositórios --> sudo apt update
instalar SSH --> sudo apt install openssh-server
verificar --> sudo service ssh status
editar ficheiros --> /etc/ssh/sshd_config , /etc/ssh/ssh_config
reiniciar o serviço ssh --> sudo service ssh restart
UFW
instalar UFW --> sudo apt install ufw
ativar --> sudo ufw enable
permitir ligações através da porta 4242 --> sudo ufw allow 4242
verificar o estado --> sudo ufw status
PASS PARA O SUDO
touch /etc/sudoers.d/sudo_config
mkdir /var/log/sudo
nano /etc/sudoers.d/sudo_config
	Defaults  passwd_tries=3
	Defaults  badpass_message="Mensaje de error personalizado"
	Defaults  logfile="/var/log/sudo/sudo_config"
	Defaults  log_input, log_output
	Defaults  iolog_dir="/var/log/sudo"
	Defaults  requiretty
	Defaults 	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
CONFIGURAÇÃO DA PASS
nano /etc/login.defs
instalar pacotes --> sudo apt install libpam-pwquality
nano /etc/pam.d/common-password
	minlen=10
	ucredit=-1
	dcredit=-1
	lcredit=-1
	maxrepeat=3
	reject_username
	difok=7
	enforce_for_root
verificar pass no utilizador --> sudo chage -l name
SRCIPT
#!/bin/bash

# ARCH
arch=$(uname -a)

# CPU PHYSICAL
cpuf=$(grep "physical id" /proc/cpuinfo | wc -l)

# CPU VIRTUAL
cpuv=$(grep "processor" /proc/cpuinfo | wc -l)

# RAM
ram_total=$(free --mega | awk '$1 == "Mem:" {print $2}')
ram_use=$(free --mega | awk '$1 == "Mem:" {print $3}')
ram_percent=$(free --mega | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')

# DISK
disk_total=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_t += $2} END {printf ("%.1fGb\n"), disk_t/1024}')
disk_use=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} END {print disk_u}')
disk_percent=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} {disk_t+= $2} END {printf("%d"), disk_u/disk_t*100}')

# CPU LOAD
cpul=$(vmstat 1 2 | tail -1 | awk '{printf $15}')
cpu_op=$(expr 100 - $cpul)
cpu_fin=$(printf "%.1f" $cpu_op)

# LAST BOOT
lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')

# LVM USE
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi)

# TCP CONNEXIONS
tcpc=$(ss -ta | grep ESTAB | wc -l)

# USER LOG
ulog=$(users | wc -w)

# NETWORK
ip=$(hostname -I)
mac=$(ip link | grep "link/ether" | awk '{print $2}')

# SUDO
cmnd=$(journalctl _COMM=sudo | grep COMMAND | wc -l)

wall "	Architecture: $arch
	CPU physical: $cpuf
	vCPU: $cpuv
	Memory Usage: $ram_use/${ram_total}MB ($ram_percent%)
	Disk Usage: $disk_use/${disk_total} ($disk_percent%)
	CPU load: $cpu_fin%
	Last boot: $lb
	LVM use: $lvmu
	Connections TCP: $tcpc ESTABLISHED
	User log: $ulog
	Network: IP $ip ($mac)
	Sudo: $cmnd cmd"

CRONTAB
edtar o ficheiro crontab --> sudo crontab -u root -e
linha a adicionar --> */10 * * * * sh /path




Questions:
-How a virtual machine works

 sistema informático e pode executar programas como se fosse um computador real. Permite a criação de múltiplos ambientes simulados ou recursos dedicados a partir de um único sistema


-Their choice of operating system

o próprio assunto explica que é mais fácil fazê-lo no Debian e se procurar documentação/tutoriais há muitos e todos eles foram feitos no debian.


-The basic diferences between Rocky and Debian

Debian é uma distribuição universal, estável e comunitária com pacotes DEB, voltada para servidores e desktops.
Rocky Linux é voltado para servidores e empresas, baseado no RHEL, com pacotes RPM, oferecendo estabilidade e suporte de longo prazo para usuários corporativos.


-The purpose of virtual machine

Visa fornecer uma plataforma de hardware e um ambiente de execução independente do sistema operativo, que esconde os detalhes da plataforma subjacente e permite que um programa seja sempre executado da mesma forma em qualquer plataforma.
Isolamento, Execução de Múltiplos Sistemas Operacionais, Eficiência de Recursos, Facilidade de Backup e Recuperação, Gerenciamento Simplificado, Custo Reduzido


-If the evaluated student chose Debian: the diference between aptitude and apt, and what APPArmor is. During the defense, a script must display information all every 10 minutes. Its operation will be checked in detail later.



